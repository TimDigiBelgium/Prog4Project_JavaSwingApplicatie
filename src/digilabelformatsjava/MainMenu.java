/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package digilabelformatsjava;

import BusinessLogic.CreateFormatFile;
import BusinessLogic.CreateSummaryFile;
import entities.LabelFormat;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Media Markt
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    //lijst met geselecteerde labelformaten
    private List<LabelFormat> LabelFormats;
    
    
    //lijst met geselecteerde labelformaat nummers (F1-F9)
    private List<String> DoelFormaten;
    //lijst met nog niet gebruikte labelformaat nummers (F1-F9)
    private List<String> RestDoelFormaten;
    
    public MainMenu() {
        initComponents();
        //centreren formulier
        this.setLocationRelativeTo(null);
        //instanties maken van de lijsten
        this.LabelFormats = new ArrayList<LabelFormat>();
        this.DoelFormaten = new ArrayList<String>();
        this.RestDoelFormaten = new ArrayList<String>();
        //Restformaten opvullen van F1 t/m F9
        InitializeRestFormaten();
        
    }
    
     private void InitializeRestFormaten()
        {
            //Restformaten volledig opvullen , F1 t/m F9
            for (int i = 1; i < 10; i++)
            {
                RestDoelFormaten.add("F" + i);
            }
        }
     
          public DefaultListModel FillSelectedFormats()
    {
//        DAfields dd = new DAfields();
        DefaultListModel listModel;
        listModel = new DefaultListModel();
//        List<Fields> a = dd.findAllFields();
        
        this.LabelFormats.stream().forEach((a1) -> {
            listModel.addElement(a1.toString() + " \n");
        });
        return listModel;
    }
     
     private void RefreshRestFormaten()
             //de formaten die reeds geselecteerd zijn wissen uit de de rest
        {
            RestDoelFormaten.clear();
            InitializeRestFormaten();
            
            for(String item : DoelFormaten)
            {
                RestDoelFormaten.remove(item);
            }
        }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstLabelFormats = new javax.swing.JList();
        btnAddLabel = new javax.swing.JButton();
        btnDeleteFormats = new javax.swing.JButton();
        btnChangeFormat = new javax.swing.JButton();
        btnDeleteFormat = new javax.swing.JButton();
        btnExportFormatsToFile = new javax.swing.JButton();
        btnExportSummary = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(lstLabelFormats);

        btnAddLabel.setForeground(new java.awt.Color(0, 204, 0));
        btnAddLabel.setLabel("SELECT LABELFORMAT");
        btnAddLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLabelActionPerformed(evt);
            }
        });

        btnDeleteFormats.setText("DELETE ALL FORMATS");
        btnDeleteFormats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteFormatsActionPerformed(evt);
            }
        });

        btnChangeFormat.setText("CHANGE FORMAT#");
        btnChangeFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeFormatActionPerformed(evt);
            }
        });

        btnDeleteFormat.setText("DELETE FORMAT");
        btnDeleteFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteFormatActionPerformed(evt);
            }
        });

        btnExportFormatsToFile.setText("EXPORT FORMATS TO DIGIDRIVER FILE");
        btnExportFormatsToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportFormatsToFileActionPerformed(evt);
            }
        });

        btnExportSummary.setLabel("EXPORT SUMMARY FOR PRODUCTION");
        btnExportSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportSummaryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteFormats, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnChangeFormat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteFormat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnExportFormatsToFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExportSummary, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChangeFormat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteFormat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteFormats)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExportSummary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExportFormatsToFile)
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLabelActionPerformed
        // TODO add your handling code here:
        
        //met het formulier om label toe te voegen, moet een lijst met nog niet geselecteerde 
        //formaatnummers meegegeven worden
        RefreshRestFormaten();
        //controleren of er nog formaten toe te voegen zijn , enkel F1 t/m F9 mogelijk
         if (RestDoelFormaten.size() == 0)
                {
                    JOptionPane.showMessageDialog(null,"Slechts 9 formaten mogelijk");
                }
                else
                {
       //nieuw formulier om labelformaat toe te voegen
        AddArticleFormatDialog addArticleFormat = new AddArticleFormatDialog(this,true);
       
        //de lijst met restdoelformaten doorsturen naar formulier
        addArticleFormat.setRestDoelFormaten(RestDoelFormaten);
        addArticleFormat.setVisible(true);
        //checken of de ok toets was ingedrukt, aan de hand van boolean
                    if (addArticleFormat.getOkCancel()) {
                          //het geselecteerde formaat toevoegen aan de lijst
                          this.LabelFormats.add(addArticleFormat.getSelectedFormat());
                          this.DoelFormaten.add(addArticleFormat.getSelectedFormat().getFormatNumber());
                          this.lstLabelFormats.setModel(this.FillSelectedFormats());
                          RefreshRestFormaten();
                    }
      
                }
       
        
    }//GEN-LAST:event_btnAddLabelActionPerformed

    private void btnChangeFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeFormatActionPerformed
        // TODO add your handling code here:
        if (this.lstLabelFormats.getSelectedIndex()!=-1) {
            this.RefreshRestFormaten();
            
            ChangeFormatNumber changeFormatNr = new ChangeFormatNumber(this,true);
            changeFormatNr.setDoelFormaten(this.RestDoelFormaten);
            
            changeFormatNr.setVisible(true);
            
            if (changeFormatNr.getOkCancel()) {
                //het formaatnummer achterhalen wat origineel was geselecteerd
                int selectedIndex;
                selectedIndex = this.lstLabelFormats.getSelectedIndex();
                
                LabelFormat selectedFormat;
                selectedFormat = LabelFormats.get(selectedIndex);
                //en dit verwijderen uit de lijst met geselecteerde formaatnummers
                this.DoelFormaten.remove(selectedFormat.getFormatNumber());
                //nieuw doelformaat toevoegen
                this.DoelFormaten.add(changeFormatNr.getDoelFormaat());
                //nieuw doelformaat koppelen aan labelformaat in lijst
                LabelFormats.get(selectedIndex).setFormatNumber(changeFormatNr.getDoelFormaat());
                //lijst in listbox refreshen
                this.RefreshLabelFormats();
                
                
            }
            
            
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Selecteer eerst een formaat");
        }
        
    }//GEN-LAST:event_btnChangeFormatActionPerformed
    private void RefreshLabelFormats()
    {
        this.lstLabelFormats.setModel(this.FillSelectedFormats());
    }
    
    
    private void btnDeleteFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteFormatActionPerformed
        // TODO add your handling code here:
        if (this.lstLabelFormats.getSelectedIndex()!=-1) {
            this.LabelFormats.remove(this.lstLabelFormats.getSelectedIndex());
            this.DoelFormaten.remove(this.lstLabelFormats.getSelectedIndex());
            this.RefreshRestFormaten();
            //lijst in listbox refreshen
            this.RefreshLabelFormats();
            
       
      }
         else
        {
            JOptionPane.showMessageDialog(null,"Selecteer eerst een formaat");
        }
    }//GEN-LAST:event_btnDeleteFormatActionPerformed

    private void btnDeleteFormatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteFormatsActionPerformed
        // TODO add your handling code here:
        this.LabelFormats.clear();
        this.DoelFormaten.clear();
        this.InitializeRestFormaten();
        this.RefreshLabelFormats();
    }//GEN-LAST:event_btnDeleteFormatsActionPerformed

    private void btnExportFormatsToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportFormatsToFileActionPerformed
    // parent component of the dialog
    JFrame parentFrame = new JFrame();
 
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Specify a file to save");   
 
    int userSelection = fileChooser.showSaveDialog(parentFrame);
 
    if (userSelection == JFileChooser.APPROVE_OPTION) {
    File fileToSave = fileChooser.getSelectedFile();
    System.out.println("Save as file: " + fileToSave.getAbsolutePath());
        try {
            PrintWriter out = new PrintWriter(fileToSave.getAbsolutePath());
            CreateFormatFile cf = new CreateFormatFile(this.LabelFormats);
            out.println(cf.getDigidriverTextCombined());
            out.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportFormatsToFileActionPerformed

    private void btnExportSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportSummaryActionPerformed
        // TODO add your handling code here:
        JFrame parentFrame = new JFrame();
 
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Specify a file to save");   
 
    int userSelection = fileChooser.showSaveDialog(parentFrame);
 
    if (userSelection == JFileChooser.APPROVE_OPTION) {
    File fileToSave = fileChooser.getSelectedFile();
    System.out.println("Save as file: " + fileToSave.getAbsolutePath());
        try {
            PrintWriter out = new PrintWriter(fileToSave.getAbsolutePath());
            CreateSummaryFile sf = new CreateSummaryFile(this.LabelFormats);
            out.println(sf.getCompleteSummary());
            out.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExportSummaryActionPerformed
    }
    
    private String completeSummary()
    {
        String completeSumm;
        completeSumm = "";
        
        return completeSumm;
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddLabel;
    private javax.swing.JButton btnChangeFormat;
    private javax.swing.JButton btnDeleteFormat;
    private javax.swing.JButton btnDeleteFormats;
    private javax.swing.JButton btnExportFormatsToFile;
    private javax.swing.JButton btnExportSummary;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstLabelFormats;
    // End of variables declaration//GEN-END:variables
}
